version: '3.9'

services:
  postgres:
    image: postgres:14
    container_name: ledger-postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
  # migrate:
  #   image: migrate/migrate
  #   depends_on:
  #     - postgres
  #   command: [
  #     "-path", "\\database\\migrations",
  #     "-database", "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable",
  #     "up"
  #   ]
  #   volumes:
  #     - ./migrations:/migrations


  # mongo:
  #   image: mongo:6.0
  #   container_name: ledger-mongo
  #   restart: always
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongo_data:/data/db

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.4.0
  #   container_name: zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "2181:2181"

  # kafka:
  #   image: confluentinc/cp-kafka:7.4.0
  #   container_name: kafka
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   volumes:
  #     - kafka_data:/var/lib/kafka/data

volumes:
  postgres_data:
  mongo_data:
  kafka_data:
